generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Admin {
  id        String    @id @default(cuid())
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  sessions  Session[]

  @@map("admins")
}

model Session {
  id        String   @id @default(cuid())
  token     String   @unique
  adminId   String
  expiresAt DateTime
  createdAt DateTime @default(now())
  admin     Admin    @relation(fields: [adminId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model Settings {
  id                  Int      @id @default(autoincrement())
  ajustadorColima     String   @default("")
  ajustadorTecoman    String   @default("")
  ajustadorManzanillo String   @default("")
  presidenteFirmaPath String?
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  @@map("settings")
}

model User {
  id             String         @id @default(cuid())
  firstName      String
  lastName       String
  secondLastName String?
  dob            DateTime
  phoneMx        String
  licenciaNum    String
  gafeteNum      String
  folio          String?
  photoPath      String?
  signaturePath  String?
  lastVigencyAt  DateTime?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  vigencia       DateTime?
  address        Address?
  vigencyEvents  VigencyEvent[]

  @@map("users")
}

model Address {
  id           String   @id @default(cuid())
  userId       String   @unique
  street       String
  exteriorNo   String?
  interiorNo   String?
  neighborhood String
  city         String
  municipality String
  state        String
  postalCode   String
  references   String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("addresses")
}

model VigencyEvent {
  id        String   @id @default(cuid())
  userId    String
  appliedAt DateTime @default(now())
  note      String?
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("vigency_events")
}
